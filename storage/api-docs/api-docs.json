{
    "openapi": "3.0.0",
    "info": {
        "title": "TRIMESTRA API",
        "description": "API Documentation for TRIMESTRA - Pregnancy Nutrition App",
        "contact": {
            "email": "support@trimestra.test"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://trimestra-backend.test/api/v1",
            "description": "Development Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "5d4fa5d5607ed675ba93907e1fc94534",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "08123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "operationId": "67d6d0fdd54fba132e1b6f55ca254183",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "operationId": "28d48c13fca984400ac8de99f54ee13a",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "operationId": "2baab1eeb5fd49516237a38da22e7a07",
                "responses": {
                    "200": {
                        "description": "User data retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/device/connect": {
            "post": {
                "tags": [
                    "Device"
                ],
                "summary": "Connect device to user",
                "operationId": "52cb8387f85fab22e6af80bf99debb6f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "device_uuid"
                                ],
                                "properties": {
                                    "device_uuid": {
                                        "type": "string",
                                        "example": "device-123456789-abcdef"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Device connected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "device": {
                                                    "type": "object"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Device connected successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/device/sync-exercise": {
            "post": {
                "tags": [
                    "Device"
                ],
                "summary": "Sync exercise data from device",
                "operationId": "0d67fcc9e713cced9b1090577979ab7b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "exercise_type",
                                    "duration",
                                    "calories_burned",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "exercise_type": {
                                        "type": "string",
                                        "example": "walking"
                                    },
                                    "duration": {
                                        "type": "integer",
                                        "example": 30
                                    },
                                    "calories_burned": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 150
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-01-15T08:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-01-15T08:30:00Z"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exercise data synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Exercise data synced successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "400": {
                        "description": "Device not connected"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/diary": {
            "get": {
                "tags": [
                    "Diary"
                ],
                "summary": "Get diary entries for a date",
                "operationId": "d625fec3dd2e9dc1223202f24be79ca8",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date in Y-m-d format",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Diary entries retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "entries": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/DiaryEntry"
                                                    }
                                                },
                                                "summary": {
                                                    "type": "object"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Diary entries retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Diary"
                ],
                "summary": "Add diary entry",
                "operationId": "d8f988f91e5341334dcdb684bb9a5121",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "date",
                                    "meal_type"
                                ],
                                "properties": {
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-01-15"
                                    },
                                    "meal_type": {
                                        "type": "string",
                                        "enum": [
                                            "breakfast",
                                            "lunch",
                                            "dinner",
                                            "snack",
                                            "exercise"
                                        ]
                                    },
                                    "food_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "recipe_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    },
                                    "exercise_type": {
                                        "type": "string",
                                        "example": "walking"
                                    },
                                    "exercise_duration": {
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Diary entry added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/DiaryEntry"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Diary entry added successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/diary/summary": {
            "get": {
                "tags": [
                    "Diary"
                ],
                "summary": "Get daily summary",
                "operationId": "122a8a1d54461e3081b6ce19781ec636",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date in Y-m-d format",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Daily summary retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "user_id": {
                                                    "type": "integer"
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "format": "date"
                                                },
                                                "total_calories_intake": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_calories_burned": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_protein": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_carbs": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_fat": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "total_fiber": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "target_calories": {
                                                    "type": "number",
                                                    "format": "float"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Daily summary retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/foods/{id}": {
            "get": {
                "tags": [
                    "Foods"
                ],
                "summary": "Get food by ID",
                "operationId": "000eab66c08730d6dcb32b9386cd8d5a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Food ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Food retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Food"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Food retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Food not found"
                    }
                }
            }
        },
        "/foods/category/{categoryId}": {
            "get": {
                "tags": [
                    "Foods"
                ],
                "summary": "Get foods by category",
                "operationId": "e36953ae08cf8019b0e9a4a2a5aa671d",
                "parameters": [
                    {
                        "name": "categoryId",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Foods by category retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Food"
                                                    }
                                                },
                                                "links": {
                                                    "type": "object"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Foods by category retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Foods"
                ],
                "summary": "Get all food categories",
                "operationId": "ce4124d3214c635235e4b0226f211dfe",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "icon": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/foods/recommended": {
            "get": {
                "tags": [
                    "Foods"
                ],
                "summary": "Get recommended foods for user",
                "operationId": "0e0754f895f7a05a62cd95100e83e016",
                "responses": {
                    "200": {
                        "description": "Recommended foods retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "foods": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Food"
                                                    }
                                                },
                                                "total_results": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recommended foods retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/recipes": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get all recipes",
                "operationId": "c8c22c89eaaa570cd6722a3901fed111",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Recipe"
                                                    }
                                                },
                                                "links": {
                                                    "type": "object"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recipes retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recipes/{id}": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Get recipe by ID",
                "operationId": "6b054efcc06297ad421f5f8c6b22d609",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Recipe ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recipe retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Recipe"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recipe retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Recipe not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/recipes/search": {
            "get": {
                "tags": [
                    "Recipes"
                ],
                "summary": "Search recipes",
                "operationId": "44fe0036b91916a2962fd8b154b22fb8",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Recipe"
                                                    }
                                                },
                                                "links": {
                                                    "type": "object"
                                                },
                                                "meta": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Search results retrieved successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "SuccessResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "data": {
                        "type": "object"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ErrorResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "user"
                        ]
                    },
                    "fingerprint_enabled": {
                        "type": "boolean"
                    },
                    "device_connected": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Food": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "category_id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "calories": {
                        "type": "number",
                        "format": "float"
                    },
                    "protein": {
                        "type": "number",
                        "format": "float"
                    },
                    "carbs": {
                        "type": "number",
                        "format": "float"
                    },
                    "fat": {
                        "type": "number",
                        "format": "float"
                    },
                    "fiber": {
                        "type": "number",
                        "format": "float"
                    },
                    "serving_size": {
                        "type": "string"
                    },
                    "cooking_time": {
                        "type": "integer"
                    },
                    "is_pregnancy_safe": {
                        "type": "boolean"
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "allergens": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "diet_types": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Recipe": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "food_id": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "ingredients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "instructions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "prep_time": {
                        "type": "integer"
                    },
                    "cook_time": {
                        "type": "integer"
                    },
                    "servings": {
                        "type": "integer"
                    },
                    "difficulty": {
                        "type": "string",
                        "enum": [
                            "easy",
                            "medium",
                            "hard"
                        ]
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "food": {
                        "$ref": "#/components/schemas/Food"
                    }
                },
                "type": "object"
            },
            "DiaryEntry": {
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "integer"
                    },
                    "date": {
                        "type": "string",
                        "format": "date"
                    },
                    "meal_type": {
                        "type": "string",
                        "enum": [
                            "breakfast",
                            "lunch",
                            "dinner",
                            "snack",
                            "exercise"
                        ]
                    },
                    "food_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "recipe_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "number",
                        "format": "float"
                    },
                    "calories": {
                        "type": "number",
                        "format": "float"
                    },
                    "protein": {
                        "type": "number",
                        "format": "float"
                    },
                    "carbs": {
                        "type": "number",
                        "format": "float"
                    },
                    "fat": {
                        "type": "number",
                        "format": "float"
                    },
                    "fiber": {
                        "type": "number",
                        "format": "float"
                    },
                    "exercise_type": {
                        "type": "string",
                        "nullable": true
                    },
                    "exercise_duration": {
                        "type": "integer",
                        "nullable": true
                    },
                    "calories_burned": {
                        "type": "number",
                        "format": "float",
                        "nullable": true
                    },
                    "device_id": {
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for User Authentication"
        },
        {
            "name": "Device",
            "description": "API Endpoints for Device Integration"
        },
        {
            "name": "Diary",
            "description": "API Endpoints for Diary Management"
        },
        {
            "name": "Foods",
            "description": "API Endpoints for Food Management"
        },
        {
            "name": "Recipes",
            "description": "API Endpoints for Recipe Management"
        }
    ]
}